// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2005
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.3.2

#ifndef ___Hello_skel_h__
#define ___Hello_skel_h__

#include <Hello.h>


#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4030200L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:Hello:1.0
//
class POA_Hello : virtual public PortableServer::ServantBase
{
    POA_Hello(const POA_Hello&);
    void operator=(const POA_Hello&);

protected:

    //
    // IDL:Hello/say_hello:1.0
    //
    void _OB_op_say_hello(OB::Upcall_ptr);

    //
    // IDL:Hello/shutdown:1.0
    //
    void _OB_op_shutdown(OB::Upcall_ptr);

public:

    POA_Hello() { }

    virtual ::CORBA::Boolean _is_a(const char*)
        throw(::CORBA::SystemException);

    virtual ::CORBA::RepositoryId _primary_interface(
        const PortableServer::ObjectId&,
        PortableServer::POA_ptr);

    Hello_ptr _this();

    virtual OB::DirectStubImpl_ptr _OB_createDirectStubImpl(
        PortableServer::POA_ptr,
        const PortableServer::ObjectId&);
    virtual void _OB_dispatch(OB::Upcall_ptr);

    //
    // IDL:Hello/say_hello:1.0
    //
    virtual void say_hello()
        throw(::CORBA::SystemException) = 0;

    //
    // IDL:Hello/shutdown:1.0
    //
    virtual void shutdown()
        throw(::CORBA::SystemException) = 0;
};

//
// IDL:Hello:1.0
//
class OBDirectStubImpl_Hello : virtual public OBStubImpl_Hello,
                               virtual public OB::DirectStubImpl
{
    OBDirectStubImpl_Hello(const OBDirectStubImpl_Hello&);
    void operator=(const OBDirectStubImpl_Hello&);

protected:

#ifdef HAVE_VCPLUSPLUS_BUGS

    OBDirectStubImpl_Hello() { }

#endif

    OBDirectStubImpl_Hello(PortableServer::POA_ptr,
                           const PortableServer::ObjectId&,
                           PortableServer::ServantBase*);

    friend class POA_Hello;

public:

    //
    // IDL:Hello/say_hello:1.0
    //
    virtual void say_hello();

    //
    // IDL:Hello/shutdown:1.0
    //
    virtual void shutdown();
};

#endif
